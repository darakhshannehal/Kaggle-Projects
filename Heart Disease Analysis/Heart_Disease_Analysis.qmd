---
title: "Heart Disease Analysis"
format: html
editor: visual
execute:
  warning: false
  message: false
---

Using a publicly available dataset, this analysis investigates the relationships between various clinical measurements and the presence of heart disease. Visualizations are used to explore the distributions of these factors and provide insights into potential risk indicators.

```{r}
# Import libraries
library(tidyverse)
library(skimr)
library(reshape2)   
library(RColorBrewer)
```

## EDA

```{r}
# Load data
heart_disease_data = read_csv("heart_disease_data.csv")

View(heart_disease_data)
glimpse(heart_disease_data) # Check data type
skim(heart_disease_data)  # Comprehensive summary

```

#### Check for missing values

```{r}
colSums(is.na(heart_disease_data))
```

#### Check for duplicate values

```{r}
duplicates = heart_disease_data[duplicated(heart_disease_data),]   

# Drop duplicate values
heart_disease_data = heart_disease_data %>% 
  distinct()

```

### Data Visualization

```{r}
# Define a custom theme

custom_theme <- theme_minimal() +
  theme(text = element_text(family = "Times New Roman"),
    axis.text = element_text(size = 11, colour = "#000000"),
    axis.title = element_text(size = 12),
    panel.grid = element_blank(),
    axis.line = element_line(linewidth = 0.5, color = "black"),
    axis.ticks = element_line(linewidth = 0.5, color = "black"),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    legend.position = "none") # remove legend 

# Apply the custom theme globally
theme_set(custom_theme)

```

#### Correlation Heatmap

```{r}
# Calculate the correlation matrix
cor_matrix <- cor(heart_disease_data, use = "complete.obs")

# Need correlation matrix in long format for ggplot2
# Using melt from reshape2 package
long_cor_matrix <- melt(cor_matrix)


ggplot(long_cor_matrix, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = round(value, 2)), color = "black", size = 3) +
  scale_fill_gradientn(colors = brewer.pal(11, "RdBu"), limits = c(-1, 1),
                       name = "Correlation") +
  labs(title = "Correlation Heatmap of Heart Disease Data",
       x = NULL,
       y = NULL) +
  guides(fill = guide_colorbar(title = "Correlation")) +  
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 11, hjust = 1),
        legend.position = "right")
```

#### Heart Disease Prevalence

```{r}

heart_disease_count = heart_disease_data %>%   
 group_by(target) %>% 
  summarize(count = n())

heart_disease_count %>% 
  ggplot(aes(factor(target), count, 
             fill = factor(target))) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("0" = "thistle3", "1" = "sandybrown"),
                    labels = c("0" = "No Disease", "1" = "Disease")) +
    scale_y_continuous(breaks = seq(0,170,20)) +
 labs(x = "target", y = "count")

# Heart Disease Status (target): 0 = No, 1 = Yes

```

#### Female Representation in the Data

```{r}
gender_count = heart_disease_data %>% 
  group_by(sex) %>% 
  summarize(count = n())

gender_count %>% 
  ggplot(aes(factor(sex), count, fill = factor(sex))) +
  geom_bar(stat = "identity") +
    scale_x_discrete(labels = c("0" = "Female", "1" = "Male")) +  
  scale_fill_manual(values = c("0" = "darkolivegreen4", "1" = "lightsalmon3"), 
                    labels = c("0" = "Female", "1" = "Male")) +
  labs(x = NULL , y = "Count") 
```

#### Number of Females with Heart Disease

```{r}
gender_hd_dist = heart_disease_data %>% 
  group_by(sex, target) %>% 
  summarise(count = n())  

gender_hd_dist %>% 
ggplot(aes(x = factor(sex), y = count,
           fill = factor(target))) +   
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Gender Distribution of Heart Disease",
       x = NULL,
       y = "Count",
       fill = "Heart Disease Status") +  # Label for the legend
    scale_x_discrete(labels = c("0" = "Female", "1" = "Male")) +  
  scale_fill_manual(values = c("0" = "thistle3", "1" = "sandybrown"),
                    labels = c("0" = "No", "1" = "Yes")) +
  theme(legend.position = c(0, 1), # Position legend in the top left corner
        legend.justification = c("left", "top")) # Align legend to the top left
          
        

```

#### What is the Age Distribution of Participants?

```{r}
heart_disease_data %>% 
ggplot(aes(x = age)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "lightblue3",
                 color = "snow",
                 alpha = 0.7) +
  geom_density(color = "cornflowerblue", size = 0.8) +
  scale_x_continuous(breaks = seq(10, 90, by = 10)) +
  scale_y_continuous(breaks = seq(0, 0.07, by = 0.01)) +  
  labs(title = "Age Distribution in Heart Disease Data",
       x = "Age",
       y = "Density")

```

#### Most Common Chest Pain Type

```{r}
cp_type <- heart_disease_data %>% 
  group_by(cp) %>% 
  summarize(count = n()) %>%
  mutate(cp = factor(cp, levels = c(0, 1, 2, 3), 
                     labels = c("typical angina", "atypical angina",
                                "non-anginal pain", "asymptomatic"))) 

cp_type %>% 
  ggplot(aes(reorder(cp, count), y = count)) +  
  geom_bar(stat = "identity", fill = "skyblue4") +
  scale_y_continuous(breaks = seq(0, 150, by = 20)) +
  labs(
       x = NULL,
       y = "Count") +
  coord_flip()

```

#### How Does Chest Pain Type Relate to Heart Disease Status?

```{r}
cp_hd_dist = heart_disease_data %>% 
  group_by(cp, target) %>% 
  summarise(count = n())%>%
  mutate(cp = factor(cp, levels = c(0, 1, 2, 3), 
                     labels = c("typical angina", "atypical angina",
                                "non-anginal pain", "asymptomatic")))  

cp_hd_dist %>% 
  ggplot(aes(x = cp, y = count, fill = factor(target))) +   
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Distribution of Chest Pain Types",
       x = NULL,
       y = "Count",
       fill = "Heart Disease Status") +
  scale_fill_manual(values = c("0" = "thistle3", "1" = "sandybrown"),
                    labels = c("0" = "No", "1" = "Yes")) +
  theme(legend.position = c(1, 1), 
        legend.justification = c("right", "top"))
```

#### Is There a Relationship Between Fasting Blood Glucose and Heart Disease?

```{r}
fast_glu_dist = heart_disease_data %>% 
  group_by(fbs, target) %>% 
  summarise(count = n())  

fast_glu_dist %>% 
ggplot(aes(x = factor(fbs), y = count, fill = factor(target))) +   
  geom_bar(stat = "identity", position = "dodge") +
  scale_y_continuous(breaks = seq(0, 150, 20)) +
  scale_fill_manual(values = c("0" = "thistle3", "1" = "sandybrown"),
                    labels = c("0" = "No", "1" = "Yes")) + 
  labs(title = "Distribution of Fasting Glucose",
       x = "Fasting Glucose (fbs)",
       y = "Count",
       fill = "Heart Disease Status") +
  theme(legend.position = c(1, 1), 
        legend.justification = c("right", "top")) 
```

#### Resting Blood Pressure Distribution

```{ndefined{r}

heart_disease_data %>% 
ggplot(aes(trestbps)) +
  geom_histogram(binwidth = 5, fill = "lightblue3", color = "snow",
                 alpha = 0.7) +
  scale_y_continuous(limits = c(0,60), breaks = seq(0, 80, by = 10)) +
  labs(title = "Distribution of Resting Blood Pressure",
       x = "Resting Blood Pressure (trestbps)",
       y = NULL)

```

#### Does Resting Blood Pressure Vary by Gender?

```{r}

heart_disease_data %>%
  ggplot(aes(x = trestbps, fill = factor(sex))) +
  geom_density(alpha = 0.5, color = "wheat4") +
  scale_fill_manual(values = c("0" = "darkolivegreen", "1" = "lightsalmon"), 
                    labels = c("0" = "Female", "1" = "Male")) + 
  labs(title = "Resting Blood Pressure by Gender",
       x = "Resting Blood Pressure (trestbps)",
       y = "Density") +
  theme(legend.position = c(0, 1),          
        legend.justification = c("left", "top"),  
        legend.title = element_blank())
```

#### How Does Serum Cholesterol Vary Across the Data?

```{r}

heart_disease_data %>% 
  ggplot(aes(x = chol)) +
  geom_histogram(binwidth = 15, fill = "lightblue3", color = "snow",
                 alpha = 0.7) +
  scale_y_continuous(limits = c(0,45), breaks = seq(0,50,10)) +
  labs(title = "Distribution of Serum Cholesterol",
       x = "Serum Cholesterol (chol)",
       y = "Count")

```

#### Distribution of Continuous Variables

```{r}
#select all continuous variable
continuous_variables = heart_disease_data %>% 
  select(age, trestbps, chol, thalach, oldpeak)

# Need long format data for faceting
long_format_data = melt(continuous_variables)

long_format_data %>% 
ggplot(aes(x = value, fill = variable)) +
  geom_histogram(bins = 10,, color = "wheat4", alpha = 0.7,
                 position = "identity") +
  facet_wrap(~ variable, scales = "free") +
  scale_fill_brewer(palette = "Set3") +  
  labs(title = "Distribution of Continuous Variables",
       x = NULL,
       y = NULL,  
       fill = "Variable") 
# X-axis represents the values of the corresponding continuous variable
# Y-axis represents the count of observations

```
